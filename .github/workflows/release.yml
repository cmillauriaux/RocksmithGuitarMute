name: Build and Release

on:
  push:
    branches: [ master ]

permissions:
  contents: write
  packages: write

jobs:
  build-windows:
    runs-on: windows-2022
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install system dependencies
      run: |
        # Install Visual C++ Redistributable - direct download method
        Write-Host "Installing Visual C++ Redistributable..."
        $url = "https://aka.ms/vs/17/release/vc_redist.x64.exe"
        $output = "$env:TEMP\vc_redist.x64.exe"
        Write-Host "Downloading from: $url"
        Invoke-WebRequest -Uri $url -OutFile $output
        Write-Host "Installing Visual C++ Redistributable..."
        Start-Process -FilePath $output -ArgumentList "/quiet" -Wait
        Write-Host "Cleaning up..."
        Remove-Item $output
        Write-Host "Visual C++ Redistributable installation completed."
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install PyInstaller
    
    - name: Verify dependencies
      run: |
        python -c "import torch; print(f'PyTorch version: {torch.__version__}')"
        python -c "import torchaudio; print(f'TorchAudio version: {torchaudio.__version__}')"
        python -c "import demucs; print(f'Demucs version: {demucs.__version__}')"
        python -c "import soundfile; print(f'SoundFile version: {soundfile.__version__}')"
        python -c "import numpy; print(f'NumPy version: {numpy.__version__}')"
    
    - name: Clean build directories
      run: |
        cd build
        python build_windows.py --clean-only
    
    - name: Build executable
      run: |
        cd build
        python build_windows.py --onefile --optimize
      env:
        GITHUB_ACTIONS: 'true'
    
    - name: Verify build output
      run: |
        if (Test-Path "build/dist/RockSmithGuitarMute.exe") {
          Write-Host "Build successful - executable found"
          $size = (Get-Item "build/dist/RockSmithGuitarMute.exe").Length / 1MB
          Write-Host "Executable size: $([math]::Round($size, 1)) MB"
        } else {
          Write-Host "Build failed - executable not found"
          Write-Host "Contents of build/dist/:"
          if (Test-Path "build/dist") {
            Get-ChildItem -Recurse "build/dist" | ForEach-Object { Write-Host "  $($_.FullName)" }
          }
          exit 1
        }
    
    - name: Create release archive
      run: |
        cd build/dist
        # Create a zip file with all distribution files
        Compress-Archive -Path * -DestinationPath "../../RockSmithGuitarMute-Windows.zip"
        cd ../..
        Write-Host "Archive created: RockSmithGuitarMute-Windows.zip"
        $archiveSize = (Get-Item "RockSmithGuitarMute-Windows.zip").Length / 1MB
        Write-Host "Archive size: $([math]::Round($archiveSize, 1)) MB"
    
    - name: Generate release tag
      id: tag
      run: |
        $timestamp = Get-Date -Format "yyyy-MM-dd-HHmm"
        $shortSha = "${{ github.sha }}".Substring(0, 7)
        $tag = "v$timestamp-$shortSha"
        echo "tag=$tag" >> $env:GITHUB_OUTPUT
        echo "Generated tag: $tag"
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        name: "RockSmith Guitar Mute ${{ steps.tag.outputs.tag }}"
        body: |
          Automatic release from commit ${{ github.sha }}
          
          ## Changes
          - Built from latest master branch
          - Commit: ${{ github.sha }}
          - Build date: ${{ github.run_started_at }}
          
          ## Installation
          1. Download `RockSmithGuitarMute-Windows.zip`
          2. Extract the archive
          3. Run `install.bat` as administrator for system installation
          4. Or run `RockSmithGuitarMute.exe` directly
          
          ## System Requirements
          - Windows 10/11 (64-bit)
          - 8 GB RAM minimum (16 GB recommended)
          - 2 GB free disk space
          - Multi-core processor recommended
          - NVIDIA GPU with CUDA support (optional, for acceleration)
        files: |
          RockSmithGuitarMute-Windows.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: RockSmithGuitarMute-Windows
        path: |
          build/dist/
          RockSmithGuitarMute-Windows.zip
        retention-days: 30
