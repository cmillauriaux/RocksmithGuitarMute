name: Test Build

on:
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  test-build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller>=5.0.0
    
    - name: Test import of main modules
      run: |
        python -c "import torch; print('✅ PyTorch:', torch.__version__)"
        python -c "import demucs; print('✅ Demucs imported successfully')"
        python -c "import soundfile; print('✅ SoundFile imported successfully')"
        python -c "import tkinter; print('✅ Tkinter available')"
        python -c "from rocksmith_guitar_mute import RocksmithGuitarMute; print('✅ Main module imported')"
        python -c "from gui.gui_main import RocksmithGuitarMuteGUI; print('✅ GUI module imported')"
    
    - name: Test build script
      run: |
        cd build
        python build_windows.py --clean-only
        echo "✅ Build script executed successfully"
    
    - name: Run basic tests
      run: |
        python -m pytest tests/ -v --tb=short
      continue-on-error: true
    
    - name: Test GUI startup (headless)
      run: |
        # Test that GUI can be imported and basic initialization works
        python -c "
        import os
        os.environ['DISPLAY'] = ':99'  # Fake display for headless testing
        try:
            from gui.gui_main import RocksmithGuitarMuteGUI
            print('✅ GUI can be initialized')
        except Exception as e:
            print('⚠️ GUI test skipped (headless environment):', str(e))
        "
      continue-on-error: true

  test-build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libsndfile1-dev ffmpeg
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test import of main modules
      run: |
        python -c "import torch; print('✅ PyTorch:', torch.__version__)"
        python -c "import demucs; print('✅ Demucs imported successfully')"
        python -c "import soundfile; print('✅ SoundFile imported successfully')"
        python -c "from rocksmith_guitar_mute import RocksmithGuitarMute; print('✅ Main module imported')"
    
    - name: Run basic tests
      run: |
        python -m pytest tests/ -v --tb=short
      continue-on-error: true
