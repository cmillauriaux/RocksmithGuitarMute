#!/usr/bin/env python3
"""
Test script pour v√©rifier le syst√®me de logging d√©taill√©
"""

import sys
from pathlib import Path

# Ajouter le r√©pertoire du projet au path
sys.path.insert(0, str(Path(__file__).parent))

from rocksmith_guitar_mute import setup_logging, RocksmithGuitarMute

def test_logging_system():
    """Test du syst√®me de logging d√©taill√©"""
    print("Test du syst√®me de logging d√©taill√©...")
    
    # Test 1: Logging de base
    print("1. Test du logging de base...")
    setup_logging(verbose=True, log_file="test_logging.log")
    
    import logging
    logger = logging.getLogger(__name__)
    
    logger.info("Test message INFO")
    logger.debug("Test message DEBUG") 
    logger.warning("Test message WARNING")
    logger.error("Test message ERROR")
    
    # Test 2: Cr√©er une instance du processeur pour d√©clencher le logging syst√®me
    print("2. Test de l'initialisation du processeur...")
    try:
        processor = RocksmithGuitarMute(demucs_model="htdemucs_6s", device="cpu")
        logger.info("Processeur cr√©√© avec succ√®s")
    except Exception as e:
        logger.error(f"Erreur lors de la cr√©ation du processeur: {e}")
    
    # Test 3: V√©rifier que le fichier de log a √©t√© cr√©√©
    log_file = Path("test_logging.log")
    if log_file.exists():
        print(f"‚úÖ Fichier de log cr√©√©: {log_file}")
        print(f"   Taille: {log_file.stat().st_size} bytes")
        
        # Lire les premi√®res lignes pour v√©rifier le contenu
        with open(log_file, 'r', encoding='utf-8') as f:
            lines = f.readlines()[:20]  # Premi√®res 20 lignes
            print("   Contenu (premi√®res lignes):")
            for i, line in enumerate(lines, 1):
                print(f"   {i:2d}: {line.rstrip()}")
        
        return True
    else:
        print("‚ùå Fichier de log non cr√©√©")
        return False

if __name__ == "__main__":
    success = test_logging_system()
    
    if success:
        print("\nüéâ Test de logging r√©ussi !")
        print("Le fichier test_logging.log contient toutes les informations de diagnostic.")
    else:
        print("\nüí• Test de logging √©chou√©.")
    
    # Nettoyer le fichier de test
    test_log = Path("test_logging.log")
    if test_log.exists():
        print(f"\nPour voir le contenu complet, ouvrez: {test_log.absolute()}")
        print("Le fichier sera conserv√© pour inspection.")
